<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="4cd58697-64d4-4e34-a6aa-99a93deefc13" name="Changes" comment="Initialize the project&#10;&#10;This commit introduces utilities that support customizable banners and handle project details like version and authors. It also sets up the `Client` class to fetch problem and study plan details from LeetCode's API. The `Problem` and `StudyPlan` models are utilized for parsing and organizing data from the API. The database interactions have been structured with the execute insert function in the database package. Lastly, Git Toolbox Blame Settings and IDE metadata files were also added.">
      <change beforePath="$PROJECT_DIR$/.github/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/.github/README.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 5
}]]></component>
  <component name="ProjectId" id="2iYpRO5S5EyYI9Gw0LXoLrfbrHH" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Python.main.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/Users/nicholas/Documents/GitHub/github.com/daily-coding-problem/leetcode-scraper",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RunManager">
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="leetcode-scraper" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-PY-241.18034.82" />
        <option value="bundled-python-sdk-975db3bf15a3-2767605e8bc2-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-241.18034.82" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="4cd58697-64d4-4e34-a6aa-99a93deefc13" name="Changes" comment="" />
      <created>1719677355766</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1719677355766</updated>
      <workItem from="1719677356836" duration="5217000" />
    </task>
    <task id="LOCAL-00001" summary="Initialize the project&#10;&#10;This commit introduces utilities that support customizable banners and handle project details like version and authors. It also sets up the `Client` class to fetch problem and study plan details from LeetCode's API. The `Problem` and `StudyPlan` models are utilized for parsing and organizing data from the API. The database interactions have been structured with the execute insert function in the database package. Lastly, Git Toolbox Blame Settings and IDE metadata files were also added.">
      <option name="closed" value="true" />
      <created>1719684678473</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1719684678473</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initialize the project&#10;&#10;This commit introduces utilities that support customizable banners and handle project details like version and authors. It also sets up the `Client` class to fetch problem and study plan details from LeetCode's API. The `Problem` and `StudyPlan` models are utilized for parsing and organizing data from the API. The database interactions have been structured with the execute insert function in the database package. Lastly, Git Toolbox Blame Settings and IDE metadata files were also added." />
    <option name="LAST_COMMIT_MESSAGE" value="Initialize the project&#10;&#10;This commit introduces utilities that support customizable banners and handle project details like version and authors. It also sets up the `Client` class to fetch problem and study plan details from LeetCode's API. The `Problem` and `StudyPlan` models are utilized for parsing and organizing data from the API. The database interactions have been structured with the execute insert function in the database package. Lastly, Git Toolbox Blame Settings and IDE metadata files were also added." />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/leetcode_scraper$main.coverage" NAME="main Coverage Results" MODIFIED="1719679956962" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>